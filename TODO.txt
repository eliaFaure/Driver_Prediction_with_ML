
28. November
TODO
- Remove timestamp and timestamp_gps feature (DONE)
- Remove all but one gyro_z feature (DONE)
- Find the best temporal features (Time series analysis / sliding window)
- Then plot the corr Matrix (DONE)
- Remove features (DONE)
- PCA algorithm


7. December
Features to keep/try:
	- Timestamp
	- Acceleration Dashboard x, y, z
	- Speed
	- Gyroscope Dashboard x, y, z

- Plot the correlation matrix using these features
- Reduce datasamples by 1/2 or 1/4
- Apply windowing function
- Obtain statistics from the windowing function
- Plot correlation matrix 

15 december
-created pipeline for cross-folder evaluation on the window size 
-used reduction factor of 100 just for testing
-inserted labels 
-split the dataframe keeping 1 Scenario for testing and the other 2 Scenarios for training (we can test on unseen data doing like this, is the best aproach in my opinion)
-WHAT WE NEED TO DO: 
    1) reduce significantly the number of features, in order to be able to train the model with a reduction factor of 2/4. Do this by: PCA, feature correlation, feature selection using RANDOM forest.
    2) resize all the 9 dataframes to the same size (same number of records) in order to avoid unbiasedeness. we need to remove useless data at the beginning or at the end of the track (when the driver is not moving yet/anymore) DONE
    3) hyperparameters tuning and choosing the best model ( just tried really basic models)


18 december

what I did: 
    **WORK ON FEATURES CORRELATION(features_correlation file)**
    -included correlation matrix inside the final code, check with reduction of 100 which are the correlated       featrues  ( just three correlated features, tried on the three different scenarios ( differnt test_sets):
    obtained: 
            (TRACK 1 FOR TESTING)
             speed_max-speed_mean,(correlation: 0.92)
             acc_x_dashboard_l_min-acc_x_dashboard_l_STD_,(correlation: 0.80)
             gyro_z_dashboard_l_min-gyro_z_dashboard_l_STD_,(correlation: 0.86)

            (TRACK 2 FOR TESTING)
            speed_max-speed_mean,(correlation: 0.93)
            speed_min-speed_mean,(correlation: 0.83)
            acc_x_dashboard_l_mean-acc_z_dashboard_l_mean,(correlation: 0.81)
            speed_mean-gyro_x_dashboard_l_STD_,(correlation: 0.83)

            (TRACK 2 FOR TESTING)
            speed_max-speed_mean,(correlation: 0.92)
            speed_min-speed_mean,(correlation: 0.82)
            gyro_x_dashboard_l_max-gyro_x_dashboard_l_STD_,(correlation: 0.84)
            acc_x_dashboard_l_mean-acc_z_dashboard_l_mean,(correlation: 0.80)

    -tried to study correlation before applying the window, but just 9 features and all of them are not correlated 

    -try to do the same with dataset not reduced( or reduced by 2)--> takes a lot of time STILL HAVE TO DO IT!

    -->take home: either we apply features correlation before the window(really few features, no correlation at all) or we do it after the window (best situation would be when we do not apply reduction, but a lot of time for windowing, with reduced dataframe only 3 features removed and different depending on the TEST_SET CHOSEN

**WORK ON PCA(PCA file)**
-simply applied PCA, plotted amounts of features with different values of exlained variance( we can obtain 95% of explained variance by simply using 19 features intead of 36, it is a lot)
-results tested on SVM using 100 as a ratio factor
-tried to test it with reduction ratio of 2: 



        

    
        
            

            
        
